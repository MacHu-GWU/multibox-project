# -*- coding: utf-8 -*-

from ordered_set import OrderedSet

from multibox.game.wow.wlk.api import (
    Character,
    Client,
)
{{ import_mode }}
{{ import_ds }}


# fmt: off
class AccountFactory:
    {%- for name in dataset.accounts %}
    {{ name }} = {{ dataset_var_name }}.get_account("{{ name }}")
    {%- endfor %}


acc_fact = AccountFactory()


class CharacterFactory:
    {%- for name in dataset.builds %}

    @property
    def {{ name }}(self) -> Character:
        return {{ dataset_var_name }}.get_character("{{ name }}")
    {%- endfor %}


char_fact = CharacterFactory()


class CharacterGroupFactory:
    {%- for name in dataset.build_groups %}

    @property
    def {{ name }}(self) -> OrderedSet[Character]:
        return {{ dataset_var_name }}.get_build_group("{{ name }}")
    {%- endfor %}


char_group_fact = CharacterGroupFactory()


class ClientFactory:
    {%- for name in dataset.clients %}

    @property
    def {{ name }}(self) -> Client:
        return {{ dataset_var_name }}.get_client("{{ name }}")
    {%- endfor %}


client_fact = ClientFactory()


class ModeFactory:
    {%- for name in dataset.modes %}

    @property
    def {{ name }}(self) -> Mode:
        return {{ dataset_var_name }}.get_mode("{{ name }}", Mode)
    {%- endfor %}


mode_fact = ModeFactory()


if __name__ == "__main__":
    # You can run this script as "main" to test it
    {%- for name in dataset.accounts %}
    print(acc_fact.{{ name }})
    {%- endfor %}

    {%- for name in dataset.builds %}
    print(char_fact.{{ name }})
    {%- endfor %}

    {%- for name in dataset.build_groups %}
    print(char_group_fact.{{ name }})
    {%- endfor %}

    {%- for name in dataset.clients %}
    print(client_fact.{{ name }})
    {%- endfor %}

    {%- for name in dataset.modes %}
    print(mode_fact.{{ name }})
    {%- endfor %}
# fmt: on
